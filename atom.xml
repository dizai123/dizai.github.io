<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DiZai</title>
  
  <subtitle>Just do IT</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-10T06:27:02.318Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>迪仔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo-GitHub搭建静态博客平台(Next主题)</title>
    <link href="http://yoursite.com/2018/08/09/Hexo-GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0-Next%E4%B8%BB%E9%A2%98/"/>
    <id>http://yoursite.com/2018/08/09/Hexo-GitHub搭建静态博客平台-Next主题/</id>
    <published>2018-08-09T13:23:00.000Z</published>
    <updated>2018-08-10T06:27:02.318Z</updated>
    
    <content type="html"><![CDATA[<p>gitHub是一个面向<a href="https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669" target="_blank" rel="noopener">开源</a>及私有<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053" target="_blank" rel="noopener">软件</a>项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。<br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 </p><a id="more"></a> <h3 id="0x01-准备工作"><a href="#0x01-准备工作" class="headerlink" title="0x01 准备工作"></a>0x01 准备工作</h3><h4 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h4><p>我的域名：<a href="http://www.dizai.tech，主要是提升自我逼格，不愿意花钱就跳过此步骤。" target="_blank" rel="noopener">www.dizai.tech，主要是提升自我逼格，不愿意花钱就跳过此步骤。</a><br>国内可以去阿里云或腾讯云购买域名，价格也很便宜。</p><h4 id="环境技术"><a href="#环境技术" class="headerlink" title="环境技术"></a>环境技术</h4><p>前往github官网<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> 注册一个github账号。<br> <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 的安装前提就是得有 Node.js 和 Git 。</p><p> 这里，我们要区分清楚git与github。git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。<br> 下面提供相关的官方版本地址，安装教程去网上搜一下就很多。</p><ul><li><p>Node 官方版本安装：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> </p></li><li><p>Git 官方版本安装：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a> </p></li><li><p>我用到软件版本（你们可以在官方下载最新版的）</p><p>Git：Git-2.18.0-64-bit </p><p>Node：node-v10.7.0-x64 </p><p>验证安装：任何位置鼠标右击出现Git Bash Here</p><p>cmd下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src="\\images\pasted-0.png\" alt="upload successful"></p><p>验证安装：cmd下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p><img src="\\images\pasted-1.png\" alt="upload successful"></p><h3 id="0x02-Github-配置"><a href="#0x02-Github-配置" class="headerlink" title="0x02 Github 配置"></a>0x02 Github 配置</h3><h4 id="创建仓库-new-repository"><a href="#创建仓库-new-repository" class="headerlink" title="创建仓库 new repository"></a>创建仓库 new repository</h4><p>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username 是你的账号名)。</p><p>在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。<br> 简单来说，User Pages 与 Project Pages的区别是：</p><ol><li>User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</li><li>用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</li><li>User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</li><li>User Pages 通过 http(s):<a href="http://username.github.io" target="_blank" rel="noopener">//username.github.io</a> 进行访问，而 Projects Pages通过 http(s):<a href="http://username.github.io/projectname" target="_blank" rel="noopener">//username.github.io/projectname</a> 进行访问。</li></ol><p>另外注意：</p><ul><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：username.github.io，其中username是你的用户名；</li><li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；<br><img src="\\images\pasted-2.png\" alt="upload successful"></li></ul><h3 id="0x03-配置SSH-key"><a href="#0x03-配置SSH-key" class="headerlink" title="0x03 配置SSH key"></a>0x03 配置SSH key</h3><p><strong>用于本地与github数据交换生成并配置key</strong><br>执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;liuxianan&quot;#你的github用户名</span><br><span class="line">git config --global user.email  &quot;xxx@qq.com&quot;#填写你的github注册邮箱</span><br></pre></td></tr></table></figure></p><p>生成ssh密钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/. ssh#检查本机已存在的ssh密钥</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;#生成密钥</span><br></pre></td></tr></table></figure></p><p>连续按回车三次（使用默认ssh密钥生成策略），密钥生成成功，存于本地用户目录(~)，打开.ssh\id_rsa.pub文件，并复制其中内容</p><p>打开你的github主页，进入个人设置-&gt; SSH and GPG keys -&gt; New SSH key：</p><p>title任意填写，将内容复制到key中即可</p><p><strong>测试ssh</strong><br>本地执行</p><p>ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>         #注意邮箱地址不用改<br>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><p>Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access.</p><p>看到这个信息说明SSH已配置成功！</p><h3 id="0x04-安装hexo"><a href="#0x04-安装hexo" class="headerlink" title="0x04 安装hexo"></a>0x04 安装hexo</h3><p><strong>以下命令都是在git命令行中实现</strong></p><p>首先在本地磁盘中建立一个Hexo文件夹用于存储本地文件(做本地文件保存以及测试使用)<br><img src="\\images\pasted-3.png\" alt="upload successful"><br>然后在文件夹中右击打开git命令框(我第一次直接在桌面右击，所以命令行无效果) </p><p><img src="\\images\pasted-4.png\" alt="upload successful"></p><p>在git命令框中安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><p><img src="\\images\pasted-5.png\" alt="upload successful"></p><p>初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexoinit</span><br></pre></td></tr></table></figure><p><img src="\\images\pasted-6.png\" alt="upload successful"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p> 此目录会自动生成hexo相关文件</p><p> 注：此处目录中会存在一个_config.yml的文件，为hexo的主配置文件，以后我们称其为站点配置文件。<br><img src="\\images\pasted-7.png\" alt="upload successful"></p><h4 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h4><p> hexo目录中执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清除缓存</span><br><span class="line">hexo g#生成静态页面</span><br><span class="line">hexo s#启动本地预览服务</span><br></pre></td></tr></table></figure></p><p> 执行命令后，hexo会在public文件夹生成相关html文件，用于本地预览与后期提交github</p><p> 浏览器访问[<a href="http://127.0.0.1:4000或localhost:4000，即可看到hexo默认生成页面hello,world]" target="_blank" rel="noopener">http://127.0.0.1:4000或localhost:4000，即可看到hexo默认生成页面hello,world]</a></p><p><img src="\\images\pasted-8.png\" alt="upload successful"></p><h3 id="0x05-写博客"><a href="#0x05-写博客" class="headerlink" title="0x05 写博客"></a>0x05 写博客</h3><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &apos;my-first-blog&apos;</span><br></pre></td></tr></table></figure><p>‘ ‘中为你本篇博客的名称，执行完成后，会自动在\hexo\source_posts\目录下生成.md文件，</p><p>只要打开这个文件就可以写博客了。（.md的文件必须用支持markdown的编辑器）</p><h3 id="0x06-上传到github"><a href="#0x06-上传到github" class="headerlink" title="0x06 上传到github"></a>0x06 上传到github</h3><h4 id="上传前的配置"><a href="#上传前的配置" class="headerlink" title="上传前的配置"></a>上传前的配置</h4><p>配置站点配置文件_config.yml中的deploy部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="安装上传插件"><a href="#安装上传插件" class="headerlink" title="安装上传插件"></a>安装上传插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><p>在hexo根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>会将有所改动的内容全部提交至github</p><h4 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot;   #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot;   #新建页面</span><br><span class="line">hexo generate   #生成静态页面至public目录</span><br><span class="line">hexo server   #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy   #部署到GitHub</span><br><span class="line">hexo help   #查看帮助</span><br><span class="line">hexo version   #查看Hexo的版本</span><br><span class="line">hexo clean   #清除缓存</span><br><span class="line"></span><br><span class="line">缩写：</span><br><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line"></span><br><span class="line">组合命令：</span><br><span class="line">hexo s -g#生成并本地预览</span><br><span class="line">hexo d -g#生成并上传</span><br></pre></td></tr></table></figure><h3 id="0x07-更改默认hexo主题及优化"><a href="#0x07-更改默认hexo主题及优化" class="headerlink" title="0x07 更改默认hexo主题及优化"></a>0x07 更改默认hexo主题及优化</h3><h4 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h4><p>进入hexo根目录</p><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>执行完成后会在hexo\themes\ 目录下生成next目录</p><p>next目录下也会存在一个_config.yml文件，这是next主题的主配置文件，以后我们称为主题配置文件</p><p>你也可以自己更换自己喜欢的主题<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a> ，官网有很多主题，</p><h4 id="主题应用"><a href="#主题应用" class="headerlink" title="主题应用"></a>主题应用</h4><p>配置站点配置文件</p><p>寻找theme字段，将其值修改为next（next前都有一个空格，否则会报错）</p><h4 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h4><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean#清除缓存</span><br><span class="line">hexo g#重新生成代码</span><br><span class="line">hexo s#部署到本地</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://127.0.0.1:4000/" target="_blank" rel="noopener">http://127.0.0.1:4000</a> 查看效果</p><h3 id="0x08-主题简单优化"><a href="#0x08-主题简单优化" class="headerlink" title="0x08 主题简单优化"></a>0x08 主题简单优化</h3><h4 id="设置布局"><a href="#设置布局" class="headerlink" title="设置布局"></a>设置布局</h4><p>主题配置文件中</p><p>寻找 Scheme 字段，next提供三种默认主题布局，将你想使用的布局取消注释即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><h4 id="设置显示语言"><a href="#设置显示语言" class="headerlink" title="设置显示语言"></a>设置显示语言</h4><p>站点配置文件中</p><p>寻找<code>language</code> 字段，设置其值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><p>语言文件位于hexo\themes\next\languages目录下</p><h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><p>主题配置文件中</p><p>寻找menu字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home     #主页</span><br><span class="line">  categories: /categories/ || th  #分类页</span><br><span class="line">  tags: /tags/ || tags     #标签页</span><br><span class="line">  about: /about/ || user     #关于页</span><br><span class="line">  #archives: /archives/ || archive  #归档页</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat     #公益404</span><br></pre></td></tr></table></figure><p>除主页与归档页外，其余页面需要手动创建</p><p>每行中 || 后的内容为指定此menu的图标</p><h4 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h4><p><strong>新建页面</strong></p><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\tags目录中生成index.md文件</p><p><strong>设置页面类型</strong></p><p>修改此index.md文件为(添加type行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2016-11-15 19:10:05</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p><strong>设置具体博客文章tags</strong></p><p>对于hexo\source_post目录下具体博客文章设置tags(设置tags行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 基于Hexo和Github搭建博客</span><br><span class="line">date: 2016-11-09</span><br><span class="line">tags: [npm, hexo, github]</span><br></pre></td></tr></table></figure><h4 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h4><p><strong>新建页面</strong></p><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\categories目录中生成index.md文件</p><p><strong>设置页面类型</strong></p><p>修改此index.md文件为(添加categories行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2016-11-15 19:11:13</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p><strong>*设置具体博客文章categories</strong></p><p>对于hexo\source_post目录下具体博客文章设置categories(设置categories行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 基于Hexo和Github搭建博客</span><br><span class="line">date: 2016-11-09</span><br><span class="line">tags: [npm, hexo, github]</span><br><span class="line">categories: 搭建博客</span><br></pre></td></tr></table></figure><h4 id="添加关于页面"><a href="#添加关于页面" class="headerlink" title="添加关于页面"></a>添加关于页面</h4><p><strong>添加页面</strong></p><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\about目录中生成index.md文件</p><p><strong>修改index.md文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: about</span><br><span class="line">date: 2016-11-15 19:08:50</span><br><span class="line">## 关于我</span><br><span class="line"></span><br><span class="line">一只学习的小菜鸟，欢迎分享知识。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">QQ：</span><br><span class="line">Email:</span><br></pre></td></tr></table></figure><h4 id="设置站内搜索"><a href="#设置站内搜索" class="headerlink" title="设置站内搜索"></a>设置站内搜索</h4><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>站点配置文件中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><h3 id="0x09-其他设置"><a href="#0x09-其他设置" class="headerlink" title="0x09 其他设置"></a>0x09 其他设置</h3><h4 id="hexo-首页文章只显示一部分"><a href="#hexo-首页文章只显示一部分" class="headerlink" title="hexo 首页文章只显示一部分"></a>hexo 首页文章只显示一部分</h4><p>在博客文章适当位置添加<code>&lt;!--more--&gt;</code> 标记即可</p><h4 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h4><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>hexo\themes\next\/layout_partials\footer.swig文件中末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="修改文章底部的带-号的标签"><a href="#修改文章底部的带-号的标签" class="headerlink" title="修改文章底部的带#号的标签"></a>修改文章底部的带#号的标签</h4><p>修改hexo\themes\next\layout_macro\post.swig文件，搜索<code>rel=&quot;tag&quot;&gt;#</code> ，改为<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h4 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h4><p>在hexo\themes\next\layout_macro目录下，新建<code>passage-end-tag.swig</code> ，并添加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开hexo\themes\next\layout_macro\post.swig<code>文件，在</code>post-body 之后添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="\\images\pasted-9.png\" alt="upload successful"></p><p>打开主题配置文件，在末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="0x010-访问线上博客"><a href="#0x010-访问线上博客" class="headerlink" title="0x010 访问线上博客"></a>0x010 访问线上博客</h3><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><p>hexo clean<br>hexo g<br>hexo d<br>浏览器访问<a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> （yourname是你的github用户名）</p><p>设置域名解析<br>ping一下你的博客域名，获取其IP地址</p><p><img src="\\images\pasted-12.png\" alt="upload successful"></p><p>在阿里云或腾讯云设置域名解析</p><p><img src="\\images\pasted-10.png\" alt="upload successful"></p><p><img src="\\images\pasted-11.png\" alt="upload successful"></p><p>在Hexo目录下的source中建一个CNAME命名的文件夹(切记没有后缀)</p><p>右键新建txt文本-&gt;输入你购买的域名<a href="http://www.ainusers.top-&gt;保存关闭" target="_blank" rel="noopener">www.ainusers.top-&gt;保存关闭</a></p><p>然后快捷键F2或者右键该文本重命名-&gt;将.txt后缀去掉-&gt;会提示文件不可用继续确定即可<br><img src="\\images\pasted-13.png\" alt="upload successful"></p><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><p><strong>进入hexo目录</strong></p><p>hexo clean<br>hexo g<br>hexo d<br>即可使用自定义域名访问博客，并且原博客域名也不会失效</p><h3 id="Hexo-Admin后台管理博客工具"><a href="#Hexo-Admin后台管理博客工具" class="headerlink" title="Hexo Admin后台管理博客工具"></a>Hexo Admin后台管理博客工具</h3><p>使用hexo+github确实非常方便管理自己的知识，但是缺点在于每次在本地使用markdown工具写完笔记，都要进行生成静态页面，然后本地预览或者上传github操作，操作非常繁琐。所以在这里配置使用Hexo Admin工具对博客进行管理，简化操作。</p><h4 id="Hexo-Admin介绍"><a href="#Hexo-Admin介绍" class="headerlink" title="Hexo Admin介绍"></a>Hexo Admin介绍</h4><p>官方网站：<a href="https://jaredforsyth.com/hexo-admin/" target="_blank" rel="noopener">https://jaredforsyth.com/hexo-admin/</a><br>属于hexo插件系列，使用B/S架构对博客进行后台管理</p><p><strong>安装</strong><br>进入/hexo目录git bash下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure></p><p><img src="\\images\pasted-15.png\" alt="upload successful"><br>访问hexo后台管理界面git bash下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -d</span><br></pre></td></tr></table></figure></p><p><img src="\\images\pasted-16.png\" alt="upload successful"></p><p>访问<a href="http://localhost:4000/即可访问本地博客" target="_blank" rel="noopener">http://localhost:4000/即可访问本地博客</a></p><p>访问<a href="http://localhost:4000/admin即可进入Hexo" target="_blank" rel="noopener">http://localhost:4000/admin即可进入Hexo</a> Admin后台管理界面</p><p>配置Hexo Admin<br>Settings选项下</p><p><img src="\\images\pasted-17.png\" alt="upload successful"></p><p>点击Setup authentification here</p><p><img src="\\images\pasted-18.png\" alt="upload successful"></p><p>配置你的Hexo Admin登陆账户及密码，以及加密cookies的字符串</p><p>下方会生成配置文件字段，将此复制到站点目录下_config.yml中</p><p>重启hexo server -d，再次访问<a href="http://localhost:4000/admin则需输入账号密码登陆。" target="_blank" rel="noopener">http://localhost:4000/admin则需输入账号密码登陆。</a></p><h3 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h3><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a><br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a><br><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html</a><br><a href="https://www.cnblogs.com/syd192/p/6074323.html" target="_blank" rel="noopener">https://www.cnblogs.com/syd192/p/6074323.html</a><br> <a href="https://blog.csdn.net/ainuser/article/details/77609180" target="_blank" rel="noopener">https://blog.csdn.net/ainuser/article/details/77609180</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;gitHub是一个面向&lt;a href=&quot;https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;开源&lt;/a&gt;及私有&lt;a href=&quot;https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;软件&lt;/a&gt;项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。&lt;br&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 &lt;/p&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计 基础知识</title>
    <link href="http://yoursite.com/2018/08/08/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2018/08/08/PHP代码审计-基础知识/</id>
    <published>2018-08-08T03:04:19.000Z</published>
    <updated>2018-08-09T12:47:47.870Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文记录 PHP 代码审计的学习过程</p><p><a href="https://mp.csdn.net/mdeditor/81107149" target="_blank" rel="noopener">PHP 代码审计博客目录</a></p></blockquote><a id="more"></a> <h1 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h1><h2 id="1-1-测试运行环境"><a href="#1-1-测试运行环境" class="headerlink" title="1.1 测试运行环境"></a>1.1 测试运行环境</h2><p>安装 wamp</p><h2 id="1-2-PHP-编写工具"><a href="#1-2-PHP-编写工具" class="headerlink" title="1.2 PHP 编写工具"></a>1.2 PHP 编写工具</h2><ol><li>EditPlu</li><li>Notepad++</li><li>Zendstudio 10 <a href="https://pan.baidu.com/s/1ZLITLQh0zsXcVlTx-wsZRA?fid=1082316314302126" target="_blank" rel="noopener">百度云下载链接</a></li></ol><h2 id="1-3-代码审计工具"><a href="#1-3-代码审计工具" class="headerlink" title="1.3 代码审计工具"></a>1.3 代码审计工具</h2><p>Seay源代码审计系统 <a href="https://pan.baidu.com/s/1skEE2Bz?fid=143632393324465" target="_blank" rel="noopener">百度云下载链接</a></p><h2 id="1-4-代码审计平台"><a href="#1-4-代码审计平台" class="headerlink" title="1.4 代码审计平台"></a>1.4 代码审计平台</h2><ol><li>DVWA <a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener">GitHub 链接</a></li><li>ZVulDrill <a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener">GitHub 链接</a></li></ol><h1 id="2-注释"><a href="#2-注释" class="headerlink" title="2. 注释"></a>2. 注释</h1><ol><li>单行注释 =&gt;  //单行注释</li><li>多行注释 =&gt;  /*多行注释*/</li></ol><h1 id="3-单引号和双引号"><a href="#3-单引号和双引号" class="headerlink" title="3. 单引号和双引号"></a>3. 单引号和双引号</h1><ol><li><p>单引号不解析变量</p></li><li><p>双引号解析变量</p><p>aaa=’123’</p><pre><code>echo &apos;$aaa&apos; =&gt; 结果为 $aaaecho &quot;$aaa&quot; =&gt; 结果为 123</code></pre></li></ol><h1 id="4-输出函数"><a href="#4-输出函数" class="headerlink" title="4. 输出函数"></a>4. 输出函数</h1><ol><li>echo 或者 print：最简单的输出方法</li><li>print_r、var_dump(var_export)、debug_zval_dump：输出变量数据值，特别是数组和对象数据</li><li>var_dump 会额外输出数据类型</li><li>print_r：输出格式很整齐，跟var_dump 的区别是没有类型数据，并且布尔值的 false 和 NULL 输出为空</li><li>var_export：所有的数据是可以作为组织好的变量输出的，都是能够作为直接赋值使用；需要注意的一点是, var_export 对于资源型的变量会输出NULL</li><li>debug_zval_dump：输出结果跟 var_dump 类似，唯一增加的一个值是 refcount，就是记录一个变量被引用了多少次，这是 php 的copy on write (写时复制) 的机制的一个重要特点。</li></ol><h1 id="5-超全局变量"><a href="#5-超全局变量" class="headerlink" title="5. 超全局变量"></a>5. 超全局变量</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">超全局变量——超全局变量是在全部作用域中始终可用的内置变量</span><br></pre></td></tr></table></figure><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><ol><li><p>在php 中可由用户操作的全局变量列表如下:</p><p>$GLOBALS — 引用全局作用域中可用的全部变量</p><pre><code>$_SERVER — 服务器和执行环境信息$_GET — HTTP GET 变量$_POST — HTTP POST 变量$_FILES — HTTP 文件上传变量$_REQUEST — HTTP Request 变量$_SESSION — Session 变量$_ENV — 环境变量$_COOKIE — HTTP Cookies</code></pre></li><li><p>已经被弃用的超全局变量</p><p>$_HTTP_COOKIE_VARS</p><pre><code>$_HTTP_ENV_VARS$_HTTP_GET_VARS$_HTTP_POST_FILES$_HTTP_POST_VARS$_HTTP_SERVER_VARS</code></pre></li></ol><h2 id="2-超全局变量示例"><a href="#2-超全局变量示例" class="headerlink" title="2. 超全局变量示例"></a>2. 超全局变量示例</h2><ol><li><p>$GLOBALS</p><h1 id="例一："><a href="#例一：" class="headerlink" title="例一："></a>例一：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$moon=&quot;1&quot;;</span><br><span class="line">echo $GLOBALS[&apos;moon&apos;];</span><br><span class="line">?&gt;</span><br><span class="line"># 显示结果为1</span><br><span class="line"></span><br><span class="line"># 例二</span><br><span class="line">&lt;?php</span><br><span class="line">function test()&#123;</span><br><span class="line">echo $moon=&quot;2&quot;;</span><br><span class="line">echo $GLOBALS[&apos;moon&apos;];</span><br><span class="line">&#125;</span><br><span class="line">$moon=&quot;1&quot;;</span><br><span class="line">test();</span><br><span class="line">?&gt;</span><br><span class="line"># 显示结果为 21 </span><br><span class="line"># 函数内部为局部变量，不被 $GLOBALS 所识别</span><br></pre></td></tr></table></figure></li><li><p>$_SERVER</p><p>test1.php</p><pre><code>&lt;?phpprint_r($_SERVER);?&gt;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test2.php</span><br><span class="line">&lt;?php</span><br><span class="line">$_SERVER=&apos;aaaaaa&apos;;</span><br><span class="line">print_r($_SERVER);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果为服务器的配置信息</p><p><img src="https://i.imgur.com/NxGTsQ1.png" alt=""></p><p>输出结果可以被覆盖</p><p><img src="https://i.imgur.com/W6GgqVz.png" alt=""></p></li><li><p>$_GET</p><p>test.php</p><pre><code>&lt;?phpprint_r($_GET);?&gt;</code></pre><p>输出结果为 URL 中的 GET 变量的数据</p><p><img src="https://i.imgur.com/30xFhlN.png" alt=""></p></li><li><p>$_POST</p><p>test.php</p><pre><code>&lt;?phpprint_r($_POST);?&gt;</code></pre><p>输出结果为 URL 中的 POET 变量的数据</p></li><li><p>$_FILES</p><ol><li>file.html<br><form action="test.php" method="post" enctype="multipart/form-data"><pre><code>&lt;lable for=&quot;file&quot;&gt;Filename:&lt;/lable&gt;&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; /&gt;&lt;br /&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;&lt;/form&gt;</code></pre><ol><li>test.php<br>&lt;?php<br>print_r($_FILES);<br>?&gt;</li></ol></form></li></ol><p>输出结果为提交的文件的信息</p><p><img src="https://i.imgur.com/0aqkmXB.png" alt=""></p></li><li><p>$_REQUEST</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">test1.php</span><br><span class="line">&lt;?php</span><br><span class="line">print_r($_REQUEST);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">test2.php</span><br><span class="line">&lt;?php</span><br><span class="line">$_REQUEST=&apos;aaaaaa&apos;;</span><br><span class="line">print_r($_REQUEST);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">输出结果可以被覆盖</span><br><span class="line"></span><br><span class="line">![](https://i.imgur.com/W6GgqVz.png)</span><br></pre></td></tr></table></figure><ol><li><p>$_SESSION</p><p>test1.php</p><pre><code>&lt;?phpprint_r($_SESSION);?&gt;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test2.php</span><br><span class="line">&lt;?php</span><br><span class="line">$_SESSION=&apos;aaaaaa&apos;;</span><br><span class="line">print_r($_SESSION);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果可以被覆盖</p><p><img src="https://i.imgur.com/W6GgqVz.png" alt=""></p></li><li><p>$_ENV</p><p>test1.php</p><pre><code>&lt;?phpprint_r($_ENV);?&gt;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">test2.php</span><br><span class="line">&lt;?php</span><br><span class="line">$_ENV=&apos;aaaaaa&apos;;</span><br><span class="line">print_r($_ENV);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">test3.php</span><br><span class="line">&lt;?php</span><br><span class="line">print_r($_ENV[&apos;OS&apos;]=&apos;bbbbbb&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果可以被覆盖</p><p><img src="https://i.imgur.com/W6GgqVz.png" alt=""></p><p><img src="https://i.imgur.com/XROLZ85.png" alt=""></p></li><li><p>$_COOKIE </p><p>test.php</p><pre><code>&lt;?phpprint_r($_COOKIE);?&gt;</code></pre><p>输出结果为 cookie 值</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文记录 PHP 代码审计的学习过程&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.csdn.net/mdeditor/81107149&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PHP 代码审计博客目录&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
</feed>
